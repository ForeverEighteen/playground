(+ 2 2)
(+ 2 (+ 1 1))
(setq my-name "zxf")
(message my-name)
(defun func1 (name)
  (interactive)
  (message (insert "hello " name)))
(defun func2 (name)
  (interactive)
  (insert "hello " name))
(func1 my-name)hello zxf
(global-set-key (kbd "<f4>") 'func1)
(switch-to-buffer-other-window "*test*")
(progn
  (switch-to-buffer-other-window "*test*")
  ;; (erase-buffer)
  (func1 "xxxx")
  (other-window 1)
  )

(let ((x "you\n"))
  (switch-to-buffer-other-window "*test*")
  ;; (erase-buffer)
  (func1 x)
  (other-window 1)
  )
(let ((x "you\n"))
  (switch-to-buffer-other-window "*test*")
  ;; (erase-buffer)
  (func2 x)
  (other-window 1)
  )
(func1 "x")
(func2 "y")

(format "hello-%s!\n" "world")
(defun func3 (name)
  (interactive)
  (insert (format "hello %s!" name)))
(func3 "func3")

(defun func4 (name)
  (let ((local-name "local-name"))
    (insert (format "hello %s %s !" name local-name))))
(func4 "args")

(read-from-minibuffer "Enter something:")

(defun func5 (host)
  (let ((guest (read-from-minibuffer "Enter your name:")))
    (insert (format "hello %s, I'm %s"
                    guest
                    host
                    )
            )
    )
  )
(func5 "robot")

(defun func6 (host)
  (let ((guest (read-minibuffer "Enter your name:")))
	(switch-to-buffer-other-window "*test*")
	(insert (format "Hello %s, I'm %s \n"
			guest
			host
			))
	(other-window 1)))
(func6 "host")

(setq list-of-mynames '("A" "B" "C"))
(car list-of-mynames)
(setq a (cdr list-of-mynames))
(car a)

(push "D" list-of-mynames)
(mapcar 'func6 list-of-mynames)

(defun replace-hello-by-bonjour ()
  (switch-to-buffer-other-window "*test*")
  (goto-char (point-min))
  (while (search-forward "Hello" nil t)
    (replace-match "Bonjour"))
  (other-window 1))
(replace-hello-by-bonjour)

(defun boldify-names ()
  (switch-to-buffer-other-window "*test*")
  (goto-char (point-min))
  (while (re-search-forward "Bonjour \\(.+\\)!" nil t)
    (add-text-properties (match-beginning 1)
			 (match-end 1)
			 (list 'face 'bold)
			 )
    )
  (other-window 1)
  )
(boldify-names)
